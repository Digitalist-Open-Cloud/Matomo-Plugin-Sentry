{"version":3,"file":"scope.js","sourceRoot":"","sources":["../src/scope.ts"],"names":[],"mappings":"","sourcesContent":["import { Breadcrumb } from './breadcrumb';\nimport { EventProcessor } from './eventprocessor';\nimport { Severity } from './severity';\nimport { User } from './user';\n\n/**\n * Holds additional event information. {@link Scope.applyToEvent} will be\n * called by the client before an event will be sent.\n */\nexport interface Scope {\n  /** Add new event processor that will be called after {@link applyToEvent}. */\n  addEventProcessor(callback: EventProcessor): this;\n\n  /**\n   * Updates user context information for future events.\n   *\n   * @param user User context object to be set in the current context.\n   */\n  setUser(user: User): this;\n\n  /**\n   * Set an object that will be merged sent as tags data with the event.\n   * @param tags Tags context object to merge into current context.\n   */\n  setTags(tags: { [key: string]: string }): this;\n\n  /**\n   * Set key:value that will be sent as tags data with the event.\n   * @param key String key of tag\n   * @param value String value of tag\n   */\n  setTag(key: string, value: string): this;\n\n  /**\n   * Set an object that will be merged sent as extra data with the event.\n   * @param extras Extras object to merge into current context.\n   */\n  setExtras(extras: { [key: string]: any }): this;\n\n  /**\n   * Set key:value that will be sent as extra data with the event.\n   * @param key String of extra\n   * @param extra Any kind of data. This data will be normailzed.\n   */\n  setExtra(key: string, extra: any): this;\n\n  /**\n   * Sets the fingerprint on the scope to send with the events.\n   * @param fingerprint string[] to group events in Sentry.\n   */\n  setFingerprint(fingerprint: string[]): this;\n\n  /**\n   * Sets the level on the scope for future events.\n   * @param level string {@link Severity}\n   */\n  setLevel(level: Severity): this;\n\n  /** Clears the current scope and resets its properties. */\n  clear(): this;\n\n  /**\n   * Sets the breadcrumbs in the scope\n   * @param breadcrumbs Breadcrumb\n   * @param maxBreadcrumbs number of max breadcrumbs to merged into event.\n   */\n  addBreadcrumb(breadcrumb: Breadcrumb, maxBreadcrumbs?: number): this;\n\n  /**\n   * Clears all currently set Breadcrumbs.\n   */\n  clearBreadcrumbs(): this;\n}\n"]}