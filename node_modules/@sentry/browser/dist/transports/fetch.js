"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var types_1 = require("@sentry/types");
var misc_1 = require("@sentry/utils/misc");
var supports_1 = require("@sentry/utils/supports");
var base_1 = require("./base");
var global = misc_1.getGlobalObject();
/** `fetch` based transport */
var FetchTransport = /** @class */ (function (_super) {
    tslib_1.__extends(FetchTransport, _super);
    function FetchTransport() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * @inheritDoc
     */
    FetchTransport.prototype.sendEvent = function (event) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var defaultOptions;
            return tslib_1.__generator(this, function (_a) {
                defaultOptions = {
                    body: JSON.stringify(event),
                    method: 'POST',
                    // Despite all stars in the sky saying that Edge supports old draft syntax, aka 'never', 'always', 'origin' and 'default
                    // https://caniuse.com/#feat=referrer-policy
                    // It doesn't. And it throw exception instead of ignoring this parameter...
                    // REF: https://github.com/getsentry/raven-js/issues/1233
                    referrerPolicy: (supports_1.supportsReferrerPolicy() ? 'origin' : ''),
                };
                return [2 /*return*/, this._buffer.add(global.fetch(this.url, defaultOptions).then(function (response) { return ({
                        status: types_1.Status.fromHttpCode(response.status),
                    }); }))];
            });
        });
    };
    return FetchTransport;
}(base_1.BaseTransport));
exports.FetchTransport = FetchTransport;
//# sourceMappingURL=fetch.js.map