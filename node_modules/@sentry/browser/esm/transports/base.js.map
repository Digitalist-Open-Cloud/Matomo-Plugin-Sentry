{"version":3,"file":"base.js","sourceRoot":"","sources":["../../src/transports/base.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,GAAG,EAAE,MAAM,cAAc,CAAC;AAEnC,OAAO,EAAE,WAAW,EAAE,MAAM,qBAAqB,CAAC;AAClD,OAAO,EAAE,aAAa,EAAE,MAAM,6BAA6B,CAAC;AAE5D,0CAA0C;AAC1C;IASE,uBAA0B,OAAyB;QAAzB,YAAO,GAAP,OAAO,CAAkB;QAHnD,4CAA4C;QACzB,YAAO,GAA4B,IAAI,aAAa,CAAC,EAAE,CAAC,CAAC;QAG1E,IAAI,CAAC,GAAG,GAAG,IAAI,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,kCAAkC,EAAE,CAAC;IAC5E,CAAC;IAED;;OAEG;IACU,iCAAS,GAAtB,UAAuB,CAAQ;;;gBAC7B,MAAM,IAAI,WAAW,CAAC,qDAAqD,CAAC,CAAC;;;KAC9E;IAED;;OAEG;IACU,6BAAK,GAAlB,UAAmB,OAAgB;;;gBACjC,sBAAO,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,EAAC;;;KACpC;IACH,oBAAC;AAAD,CAAC,AA1BD,IA0BC","sourcesContent":["import { API } from '@sentry/core';\nimport { Event, Response, Transport, TransportOptions } from '@sentry/types';\nimport { SentryError } from '@sentry/utils/error';\nimport { PromiseBuffer } from '@sentry/utils/promisebuffer';\n\n/** Base Transport class implementation */\nexport abstract class BaseTransport implements Transport {\n  /**\n   * @inheritDoc\n   */\n  public url: string;\n\n  /** A simple buffer holding all requests. */\n  protected readonly _buffer: PromiseBuffer<Response> = new PromiseBuffer(30);\n\n  public constructor(public options: TransportOptions) {\n    this.url = new API(this.options.dsn).getStoreEndpointWithUrlEncodedAuth();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public async sendEvent(_: Event): Promise<Response> {\n    throw new SentryError('Transport Class has to implement `sendEvent` method');\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public async close(timeout?: number): Promise<boolean> {\n    return this._buffer.drain(timeout);\n  }\n}\n"]}