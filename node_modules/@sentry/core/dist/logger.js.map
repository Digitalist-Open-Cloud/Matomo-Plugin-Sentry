{"version":3,"file":"logger.js","sourceRoot":"","sources":["../src/logger.ts"],"names":[],"mappings":";;AAAA,2CAAqD;AAErD,+DAA+D;AAC/D,IAAM,MAAM,GAAG,sBAAe,EAAY,CAAC;AAE3C,YAAY;AACZ;IAME,YAAY;IACZ;QACE,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;QAC9B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;IACvB,CAAC;IACD,YAAY;IACL,wBAAO,GAAd;QACE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;IACvB,CAAC;IACD,YAAY;IACL,uBAAM,GAAb;QACE,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;IACxB,CAAC;IACD,YAAY;IACL,oBAAG,GAAV,UAAW,OAAY;QACrB,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,OAAO;SACR;QACD,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,0BAAwB,OAAS,CAAC,CAAC,CAAC,iCAAiC;IACxF,CAAC;IACD,YAAY;IACL,qBAAI,GAAX,UAAY,OAAY;QACtB,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,OAAO;SACR;QACD,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,2BAAyB,OAAS,CAAC,CAAC,CAAC,iCAAiC;IAC1F,CAAC;IACD,YAAY;IACL,sBAAK,GAAZ,UAAa,OAAY;QACvB,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,OAAO;SACR;QACD,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,4BAA0B,OAAS,CAAC,CAAC,CAAC,iCAAiC;IAC5F,CAAC;IACH,aAAC;AAAD,CAAC,AAxCD,IAwCC;AAED,IAAM,MAAM,GAAG,IAAI,MAAM,EAAE,CAAC;AAEnB,wBAAM","sourcesContent":["import { getGlobalObject } from '@sentry/utils/misc';\n\n// TODO: Implement different loggers for different environments\nconst global = getGlobalObject() as Window;\n\n/** JSDoc */\nclass Logger {\n  /** JSDoc */\n  private readonly console: Console;\n  /** JSDoc */\n  private disabled: boolean;\n\n  /** JSDoc */\n  public constructor() {\n    this.console = global.console;\n    this.disabled = true;\n  }\n  /** JSDoc */\n  public disable(): void {\n    this.disabled = true;\n  }\n  /** JSDoc */\n  public enable(): void {\n    this.disabled = false;\n  }\n  /** JSDoc */\n  public log(message: any): void {\n    if (this.disabled) {\n      return;\n    }\n    this.console.log(`Sentry Logger [Log]: ${message}`); // tslint:disable-line:no-console\n  }\n  /** JSDoc */\n  public warn(message: any): void {\n    if (this.disabled) {\n      return;\n    }\n    this.console.warn(`Sentry Logger [Warn]: ${message}`); // tslint:disable-line:no-console\n  }\n  /** JSDoc */\n  public error(message: any): void {\n    if (this.disabled) {\n      return;\n    }\n    this.console.error(`Sentry Logger [Error]: ${message}`); // tslint:disable-line:no-console\n  }\n}\n\nconst logger = new Logger();\n\nexport { logger };\n"]}